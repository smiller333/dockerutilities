# GoReleaser configuration for dockerutilities
# This file configures automated releases with cross-platform builds
# Optimized for performance and enhanced changelog generation

# Pre-build hooks for validation and preparation
before:
  hooks:
    - go mod tidy
    - go mod verify
    - go vet ./...
    - go test -v ./...

# Build configuration optimized for performance
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    binary: dockerutilities
    ldflags:
      - -s -w
      - -X github.com/smiller333/dockerutilities/src/version.Version={{.Version}}
      - -X github.com/smiller333/dockerutilities/src/version.GitCommit={{.Commit}}
      - -X github.com/smiller333/dockerutilities/src/version.BuildTime={{.Date}}
    hooks:
      pre: |
        echo "Building {{ .Os }}/{{ .Arch }} binary..."
        echo "Version: {{ .Version }}"
        echo "Commit: {{ .Commit }}"
      post: |
        echo "Built binary for {{ .Os }}/{{ .Arch }}"
        # Enhanced binary validation
        if [ -f "{{ .Path }}" ]; then
          echo "Binary size: $(stat -c%s {{ .Path }}) bytes"
          # Test version command and basic functionality
          if [ "{{ .Os }}" = "linux" ] || [ "{{ .Os }}" = "darwin" ]; then
            chmod +x {{ .Path }}
            echo "Testing binary functionality..."
            {{ .Path }} version 2>/dev/null || echo "Version command not available"
            {{ .Path }} --help 2>/dev/null || echo "Help command not available"
          fi
        fi

# Enhanced archive configuration with improved naming and organization
archives:
  - format: binary
    name_template: >-
      {{ .ProjectName }}-
      {{- title .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else }}{{ .Arch }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip

# Enhanced changelog configuration
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^chore:'
      - Merge pull request
      - Merge branch
      - '^wip:'
      - '^temp:'
    include:
      - '^feat:'
      - '^fix:'
      - '^improve:'
      - '^perf:'
      - '^refactor:'
      - '^security:'
      - '^breaking:'

# Enhanced release configuration with proper descriptions
release:
  # GitHub release settings
  github:
    owner: smiller333
    name: dockerutilities
  
  # You can change the name of the release
  # Default: '{{.Tag}}'
  name_template: "{{.ProjectName}} v{{.Version}}"
  
  # What to do with the release notes in case the release already exists
  # Valid options: keep-existing, append, prepend, replace
  # Default: 'keep-existing'
  mode: replace
  
  # Header for the release body
  header: |
    ## üöÄ Release {{ .Version }}
    
    **Release Date**: {{ .Date }}
    **Commit**: {{ .Commit }}
    ---
  
  # Footer for the release body
  footer: |
    ---
    
    ### üìã Installation
    
    Download the appropriate binary for your platform:
    
    **Linux (x86_64)**: `dockerutilities-{{ .Version }}-linux-x86_64`
    **Linux (ARM64)**: `dockerutilities-{{ .Version }}-linux-arm64`
    **macOS (Intel)**: `dockerutilities-{{ .Version }}-darwin-x86_64`
    **macOS (Apple Silicon)**: `dockerutilities-{{ .Version }}-darwin-arm64`
    **Windows (x86_64)**: `dockerutilities-{{ .Version }}-windows-x86_64.zip`
    **Windows (ARM64)**: `dockerutilities-{{ .Version }}-windows-arm64.zip`
    
    ### üîê Verification
    
    All binaries are signed and verified. You can verify the integrity using:
    
    ```bash
    # Download checksums file
    curl -LO https://github.com/smiller333/dockerutilities/releases/download/{{ .Tag }}/checksums.txt
    
    # Verify binary (replace with your platform)
    sha256sum -c checksums.txt
    ```
    
    ### üîó Quick Links
    - [Documentation](https://github.com/smiller333/dockerutilities#readme)
    - [Issues](https://github.com/smiller333/dockerutilities/issues)
    - [Discussions](https://github.com/smiller333/dockerutilities/discussions)
    
    ### üìù Release Notes Template
    For detailed release notes and guidelines, see [docs/release-notes-template.md](https://github.com/smiller333/dockerutilities/blob/main/docs/release-notes-template.md)
  
  # Upload metadata.json and artifacts.json to the release as well
  include_meta: true
  
  # You can add extra pre-existing files to the release
  extra_files:
    - glob: README.md
    - glob: LICENSE

# Enhanced checksums configuration
checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

# Docker configuration (prepared for Phase 4)
# dockers:
#   - image_templates:
#       - "ghcr.io/smiller333/dockerutilities:{{ .Version }}"
#       - "ghcr.io/smiller333/dockerutilities:latest"
#     dockerfile: Dockerfile
#     use: buildx
#     build_flag_templates:
#       - "--platform=linux/amd64"
#       - "--platform=linux/arm64"
#     extra_files:
#       - README.md
#       - LICENSE
